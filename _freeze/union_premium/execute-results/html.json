{
  "hash": "966185411d8b7554c95f9c86197284c4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Calculate union wage premiums by state and year\"\nauthor: \"Emma Cohn\"\nformat: html\neditor: visual\n---\n\n\n\n\nUse this code to calculate a union wage premium (the difference between median union and nonunion median wages) by state using the [EPI CPS microdata extracts](https://economic.github.io/earn_code_library/epi_microdata.html).\n\nNote: **sample sizes vary widely** over time, state, and union vs nonunion groups. Keep a close eye on this, and remember that some states may not have large enough sample sizes to produce strong data. Though there is no hard and fast rule for how large a sample needs to be, smaller samples will produce more noisy, less reliable data.\n\nIt may not be possible to find accurate union wage premium data for your state.\n\nThe following chunk of code loads the R libraries necessary for this exercise. You may need to install them to run this code.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Load necessary libraries\nlibrary(tidyverse)\nlibrary(epiextractr)\nlibrary(epidatatools)\nlibrary(labelled)\nlibrary(realtalk)\n```\n:::\n\n\n\n\n## Import and clean data\n\n**Note:** Don't forget to **update years** to match your setup before running the script.\n\nRunning this script chunk will call the BLS Current Population Survey ORG data required to calculate union wage premiums.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Import CPS ORG data\n# Note: load as many years necessary to get sufficient sample sizes or desired time series.\ncps_org <- load_org(2020:2024, \"year\", \"age\", \"statefips\", \"wage\", \"union\", \"orgwgt\", \"a_earnhour\", \"cow1\") %>%\n  # Age and labor force restrictions (exclude self-employed and self-incorporated), non-imputed wages.\n  filter(age >= 16, cow1 <= 5, a_earnhour != 1, !is.na(wage))\n```\n:::\n\n\n\n\n## Method 1: Point-in-time comparisons\n\nThis method produces union wage premiums for all fifty states, pooling five years of data to get sufficient sample sizes.\n\nNote: some of the sample sizes are still quite small, even with five years of data. E.g., South Carolina's union-represented sample. Consider expanding the number of years pooled, but keep in mind that this will also alter what you can say about the results.\n\n### Create wage data\n\nThis code chunk uses EPI methodology to correct for wage clumping by created a weighted average of wages around the median. The result is one median wage per state.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Note: divide orgwgt by as many months are in your pool.\nwage_single <- cps_org |>\n  mutate(union = to_factor(union)) |>\n  summarise(\n      wage_median = averaged_median(\n        x = wage, \n        w = orgwgt/60,  \n        quantiles_n = 9L, \n        quantiles_w = c(1:4, 5, 4:1)),\n        n=n(),\n        .by=c(union, statefips))\n```\n:::\n\n\n\n\n### Calculate union wage premium\n\nThis code chunk separates out union versus nonunion wages, and then finds the percent difference. It also reorients the data to make them easier to read.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwage_dif_single <- wage_single |>\n  mutate(union_stat = case_when(union == \"Not union represented\" ~ \"nonunion\", \n                                union == \"Union represented\" ~ \"union\")) |>\n  pivot_wider(id_cols = statefips, names_from = union_stat, values_from = wage_median) |>\n  mutate(diff = ((union-nonunion)/nonunion))|>\nmutate(state = to_factor(statefips)) |>\nselect(statefips, state, everything())\n```\n:::\n\n\n\n\n## Method 2: Time series\n\nThis method produces inflation-adjusted union wage premiums for one state over time.\n\nNote: Because you can't combine years to pool data for this method, check sample sizes before proceeding. Do not use for states that have insufficient sample sizes.\n\nYou can check sample sizes by running the code through line X and checking the `n` column of `wage_series`.\n\n### Set up inflation adjustment\n\nFor more information on inflation adjusting wages, see [Inflation adjusting with Realtalk](https://economic.github.io/earn_code_library/inflation_adjusting.html).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate real wage over time: load CPI data from realtalk\ncpi_data <- realtalk::c_cpi_u_annual\n\n# Set base year to 2024\ncpi2024 <- cpi_data$c_cpi_u[cpi_data$year==2024]\n```\n:::\n\n\n\n\n### Create wage data\n\nThis code chunk calculates median wages and adjusts them for inflation.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Note: change statefips to whichever state you prefer.\nwage_series <- cps_org |>\n  filter(statefips == 36) |>\n  mutate(union = to_factor(union)) |>\n  summarise(\n     wage_median = averaged_median(\n     x = wage, \n     w = orgwgt/12,  \n     quantiles_n = 9L, \n     quantiles_w = c(1:4, 5, 4:1)),\n     n=n(),\n     .by = c(year, union)) |>\n  # Merge annual CPI data to data frame by year\n  left_join(cpi_data, by='year') |>\n  # Inflation adjust wages\n mutate(real_wage = wage_median * (cpi2024/c_cpi_u)) |>\nselect(year, union, real_wage)\n```\n:::\n\n\n\n\n### Calculate union wage premium\n\nThis code chunk separates out union versus nonunion wages, and then finds the percent difference. It also reorients the data to make them easier to read.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwage_dif_series <- wage_series |>\n  mutate(union_stat = case_when(union == \"Not union represented\" ~ \"nonunion\", \n                                union == \"Union represented\" ~ \"union\")) |>\n  pivot_wider(id_cols = year, names_from = union_stat, values_from = real_wage) |>\n  mutate(diff = ((union-nonunion)/nonunion)) |>\n  select(year, nonunion, union, diff)\n```\n:::\n\n\n\n\nHappy coding!",
    "supporting": [
      "union_premium_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}