{
  "hash": "4d60eb370586b05ad44895e844be3368",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Comparing union density rates in right-to-work versus non-right-to-work states\"\nauthor: \"Jori Kandra and Emma Cohn\"\nformat: html\neditor: visual\n---\n\n\n\n\nUse this code to find union density rates for right-to-work versus non-right-to-work states using the [EPI CPS microdata extracts](https://economic.github.io/earn_code_library/epi_microdata.html).\n\n**Note:** This code requires the use of an additional csv file to assign the RTW vs non-RTW labels to each state. Download the file [here](https://s3.amazonaws.com/media.earn.us/files/geo_rtw_labels.csv) and save to your project before running code.\n\nYou can edit this file (and the relevant code below) to change how states are grouped (e.g., by region).\n\nThe following chunk of code loads the R libraries necessary for this exercise. You may need to install them to run this code.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Load necessary libraries\nlibrary(tidyverse)\nlibrary(here)\nlibrary(epiextractr)\nlibrary(epidatatools)\nlibrary(openxlsx)\n```\n:::\n\n\n\n\n## Set up your workbook\n\n**Note:** Don't forget to **update years, file names,** and **file paths** to match your setup before running the script.\n\nIn this chunk, you'll define the sheet function for the generated workbook and apply some formatting. This helps with readability and condenses the code.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define sheet function\nsheet_fun <- function(data, wb, s, format = NULL) {\n  # Add a worksheet to workbook object\n  # Note: The sheet name and wb object are anonymized\n  addWorksheet(wb, sheetName = paste0(s))\n  \n  # Write data to sheet\n  # Note: anonymize data for use in a piped method call\n  writeData(wb, sheet = paste0(s), x = data)\n  \n  # Format based on the value of format\n  if (!is.null(format)) {\n    lapply(format, function(f) {\n      switch(f,\n             \"PERCENTAGE\" = addStyle(wb, sheet = paste0(s), style = createStyle(numFmt = '0.0%'), cols = 2:ncol(data), rows = 2:(nrow(data) + 1), gridExpand = TRUE),\n             \"NUMBER\" = addStyle(wb, sheet = paste0(s), style = createStyle(numFmt = '#,##0'), cols = 2:length(data), rows = 2:(nrow(data) + 1), gridExpand = TRUE)\n      )\n    })\n  }\n  \n  # This line allows the output to return to the data.frame\n  # Note: removing this specification changes output to a list of attributes that are used to write to the wb object  \n  return(data)\n  \n}\n```\n:::\n\n\n\n\n## Download and clean data\n\n**Note:** Don't forget to **update years, file names,** and **file paths** to match your setup before running the script.\n\nRunning this script chunk will call the BLS Current Population Survey ORG data required to calculate union density. It will also use the **geo_rtw_labels.csv** file you downloaded to label each state as \"RTW\" or \"Non-RTW.\"\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set objects to download\nvar_list <- c(\"year\", \"month\", \"age\", \"statefips\", \n              \"wage\", \"union\", \"lfstat\")\n\n# Load supplemental RTW label data\ngeo_rtw_labels <- read.csv(here(\"input/geo_rtw_labels.csv\")) %>% \n  select(statefips, rtw, rtw_timeline_lab)\n\n# Import CPS ORG data\n# Note: make sure the years reflect your desired window!\ncps_org <- load_org(1983:2024, all_of(c(var_list, \"orgwgt\"))) %>%\n  # Filter out workers under 16 and self-employed workers. \n  filter(age >= 16, lfstat == 1) %>% \n  # Merge RTW status labels to states\n  left_join(geo_rtw_labels, by = \"statefips\")\n```\n:::\n\n\n\n\n## Run analysis and download your output\n\n**Here you'll run the analysis and produce the resulting Excel workbook output.**\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# set wb object to bind to \nunion_wb <- createWorkbook()\n\nunion <- cps_org %>% \n  # union membership rates by RTW\n  summarise(union = weighted.mean(union, w = orgwgt/12, na.rm = TRUE), .by = c(year, rtw_timeline_lab)) %>% \n  # reshape wide by RTW label\n  pivot_wider(id_cols = year, names_from = rtw_timeline_lab, values_from = union) %>% \n  # write to wb object\n  sheet_fun(union_wb, s = \"union_rtw\", format = \"PERCENTAGE\")\n\n# save workbooks; make sure to edit the file path!\nsaveWorkbook(union_wb, here(\"output/rtw_union.xlsx\"), overwrite = TRUE)\n```\n:::\n\n\n\n\n## Bonus: generate median wages\n\nUse this chunk to generate median wages across all workers and compare to median wages in RTW vs non-RTW states.\n\n**Note:** This wage does not factor in any controls (e.g., demographics, occupation, education), so is best used for a relative comparison.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# median wage for 2023 and 2024\nbinipolate(cps_org %>% filter(year >= 2023), wage, bin_size = 0.25, .by = year, w = orgwgt/12)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 3\n   year probs value\n  <int> <dbl> <dbl>\n1  2023   0.5  24.0\n2  2024   0.5  25.0\n```\n\n\n:::\n\n```{.r .cell-code}\n# median wage by RTW status for 2024\nbinipolate(cps_org %>% filter(year == 2024), wage, bin_size = 0.25, .by = c(year, rtw_timeline_lab), w = orgwgt/12)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 4\n   year rtw_timeline_lab probs value\n  <int> <chr>            <dbl> <dbl>\n1  2024 Non-RTW            0.5  26.4\n2  2024 RTW                0.5  23.2\n```\n\n\n:::\n:::\n\n\n\n\nHappy coding!\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}