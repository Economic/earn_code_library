{
  "hash": "6338d4ab65283c86e2ae2112dd67aade",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"State-level median wages by demographic\"\nauthor: \"Emma Cohn and Sebastian Martinez Hickey\"\nformat: html\neditor: visual\n---\n\n\n\n\nUse this code to find median wages and sample sizes by various demographics (race, gender, race and gender, and educational attainment) using the [EPI CPS microdata extracts](https://economic.github.io/earn_code_library/epi_microdata.html).\n\n**Please note:** these data are already available on the [State of Working American Data Library](https://data.epi.org/). However, due to small sample sizes, some cuts of these data are suppressed. You can use this code to generate all data, regardless of sample size, but **be careful when making claims about data with small sample sizes**.\n\nThe following chunk of code loads the R libraries necessary for this exercise. You may need to install them to run this code. We'll also set up a `wb` value that will allow us to generate an Excel workbook. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Load necessary libraries\nlibrary(tidyverse)\nlibrary(epiextractr)\nlibrary(epidatatools)\nlibrary(labelled)\nlibrary(realtalk)\nlibrary(openxlsx2)\n\n#Set up workbook\nwb <- wb_workbook()\n```\n:::\n\n\n\n\n## Set up for inflation adjusting\n\nEPI uses the CPI-U-RS series to inflation adjust wages, so we'll select that series and assign it to a dataframe. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# pulling in CPI-U-RS series\ncpi_data <- realtalk::cpi_u_rs_annual\n\n# set base year to 2024\ncpi2024 <- cpi_data$cpi_u_rs[cpi_data$year==2024]\n```\n:::\n\n\n\n\n## Import and clean data\n\n**Note:** Don't forget to **update years** to match your setup before running the script.\n\nRunning this script chunk will call the BLS Current Population Survey ORG data required to calculate median wages.\n\nWe'll set standard labor force restrictions, ensuring that we only keep workers who are not self-employed or self-incorporated and are over the age of 16. We'll also restrict this data to one state (Wisconsin, in this case), and inflation adjust wages. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#load in CPS ORG data\ncps_org <- load_cps(\"org\", 1979:2024, year, orgwgt, wage, statefips, female, wbho, age, \n                                      selfemp, emp, selfinc, cow1, educ, gradeatn) %>%\n  # Standard labor force and age restrictions, restrict to only Wisconsin (statefips code = 55)\n  filter(age >= 16, emp == 1, statefips == 55,\n         case_when(year < 1989 ~ selfemp == 0,\n                   year >= 1989 & year < 1994 ~ selfemp == 0 | selfinc == 0,\n                   TRUE ~ cow1 <= 5)) %>% \n  # Merge annual CPI data to data frame by year\n  left_join(cpi_data, by='year') %>%\n  # Inflation adjust wages to 2024$\n  mutate(realwage = wage * (cpi2024/cpi_u_rs))\n```\n:::\n\n\n\n\n## Sheet 1: Wages by race, gender, and race and gender. \n\nThis section of the script produces median wages by year and by various demographic cuts. Here we use EPI methodology to correct for wage clumping by created a weighted average of wages around the median. The result is one median wage per year per demographic cut.\n\n### Median wages by gender\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwages_gender <- cps_org |> \n  mutate(female = to_factor(female)) |>\n  summarise(\n      wage_median = averaged_median(\n        x = realwage, \n        w = orgwgt/12,  \n        quantiles_n = 9L, \n        quantiles_w = c(1:4, 5, 4:1)),\n        n=n(),\n        .by=c(female, year)) |>\n  #Relabel for clarity\n  mutate(gender = case_when(female == \"Female\" ~ \"Women\", female == \"Male\" ~ \"Men\")) |>\n  #Change orientation for Excel layout\n  pivot_wider(id_cols = year, names_from = gender, values_from = wage_median)\n```\n:::\n\n\n\n\n### Median wages by race\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwages_race <- cps_org |> \n  mutate(wbho = to_factor(wbho)) |>\n  summarise(\n      wage_median = averaged_median(\n        x = realwage, \n        w = orgwgt/12,  \n        quantiles_n = 9L, \n        quantiles_w = c(1:4, 5, 4:1)),\n        n=n(),\n        .by=c(wbho, year)) |>\n  #Change orientation for Excel layout\n  pivot_wider(id_cols = year, names_from = wbho, values_from = wage_median)\n```\n:::\n\n\n\n\n### Median wages by race and gender\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwages_race_gender <- cps_org |> \n  mutate(wbho = to_factor(wbho)) |>\n  mutate(female = to_factor(female)) |>\n  summarise(\n      wage_median = averaged_median(\n        x = realwage, \n        w = orgwgt/12,  \n        quantiles_n = 9L, \n        quantiles_w = c(1:4, 5, 4:1)),\n        n=n(),\n        .by=c(wbho, female, year)) |>\n  unite(col = \"demographic\", c(wbho, female), na.rm = TRUE) |> \n  #Relabel for clarity\n  mutate(demographic = case_when(demographic == \"White_Female\" ~ \"White Women\", \n                                demographic == \"White_Male\" ~ \"White Men\",\n                                demographic == \"Black_Female\" ~ \"Black Women\", \n                                demographic == \"Black_Male\" ~ \"Black Men\",\n                                demographic == \"Hispanic_Female\" ~ \"Hispanic Women\", \n                                demographic == \"Hispanic_Male\" ~ \"Hispanic Men\",\n                                demographic == \"Other_Female\" ~ \"Other Women\", \n                                demographic == \"Other_Male\" ~ \"Other Men\")) |>\n  #Change orientation for Excel layout\n  pivot_wider(id_cols = year, names_from = demographic, values_from = wage_median)\n```\n:::\n\n\n\n\n### Format and save output\n\nHere we'll join all three dataframes into one, order our variables, and save the new dataframe to a sheet in our Excel workbook.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Join the three dataframes by year\nwage_demos <-  left_join(wages_gender, wages_race, by='year') |>\n  left_join(wages_race_gender) |> \n  #Order the columns\n  select(year, starts_with(\"White\"), starts_with(\"Black\"), starts_with(\"Hispanic\"), Women, Men)\n\n#Create a new sheet and add data to sheet\nwb$add_worksheet(sheet = \"Race and gender_median wages\") $\n  add_data(x = wage_demos)\n```\n:::\n\n\n\n\n## Sheet 2: Sample sizes\n\nThis code chunk follows the exact same steps as the section above, except it generates sample sizes instead of median wages. It is extremely important to reference this sheet when making claims about the data. Avoid relying on data drawn from small sample sizes. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#By gender\nsample_gender <- cps_org |> \n  mutate(female = to_factor(female)) |>\n  summarise(n=n(),\n        .by=c(female, year)) |>\n  mutate(gender = case_when(female == \"Female\" ~ \"Women\", female == \"Male\" ~ \"Men\")) |>\n  pivot_wider(id_cols = year, names_from = gender, values_from = n)\n\n#By race\nsample_race <- cps_org |> \n  mutate(wbho = to_factor(wbho)) |>\n  summarize(n=n(),\n            .by = c(wbho, year)) |> \n  pivot_wider(id_cols = year, names_from = wbho, values_from = n)\n\n#By race and gender\nsample_race_gender <- cps_org |> \n  mutate(wbho = to_factor(wbho)) |>\n  mutate(female = to_factor(female)) |>\n  summarise(n=n(),\n        .by=c(wbho, female, year)) |>\n  unite(col = \"demographic\", c(wbho, female), na.rm = TRUE) |> \n  mutate(demographic = case_when(demographic == \"White_Female\" ~ \"White Women\", \n                                demographic == \"White_Male\" ~ \"White Men\",\n                                demographic == \"Black_Female\" ~ \"Black Women\", \n                                demographic == \"Black_Male\" ~ \"Black Men\",\n                                demographic == \"Hispanic_Female\" ~ \"Hispanic Women\", \n                                demographic == \"Hispanic_Male\" ~ \"Hispanic Men\",\n                                demographic == \"Other_Female\" ~ \"Other Women\", \n                                demographic == \"Other_Male\" ~ \"Other Men\")) |>\n  pivot_wider(id_cols = year, names_from = demographic, values_from = n)\n\n#Join dataframes\nsample_sizes <-  left_join(sample_gender, sample_race, by='year') |>\n  left_join(sample_race_gender) |> \n  select(year, starts_with(\"White\"), starts_with(\"Black\"), starts_with(\"Hispanic\"), Women, Men)\n\n#Save to Excel\nwb$add_worksheet(sheet = \"Sample sizes\") $\n  add_data(x = sample_sizes)\n```\n:::\n\n\n\n\n## Sheet 3: Wages by educational attainment\n\nFinally, this code chunk generates median wages by educational attainment. The code uses the same weighted median wage methodology as above. \n\nIt also includes two sets of custom educational categories, which you can exclude or modify as needed. See the [EPI Microdata variables list](https://microdata.epi.org/variables/education/gradeatn/) to learn how the `gradeatn` variable is categorized by default. \n\n### Filter the data\n\nThe `gradeatn` variable is only available from 1992, so first we need to filter the data to exclude irrelevant years. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnew_cps_org <- filter(cps_org, year >= 1992)\n```\n:::\n\n\n\n\n### Calculate wages by education level\n\nNow we'll run the code. The first part of both sections of code here creates custom educational attainment categories. The second part calulcates wages. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Single category Associate degree\nwages_sing_assoc <- new_cps_org |> \n  mutate(educat = case_when(gradeatn %in% c(1,2,3,4,5,6,7,8) ~ \"No HS diploma\",\n                          gradeatn == 9 ~ \"HS graduate\",\n                          gradeatn == 10 ~ \"Some college but no degree\",\n                          gradeatn == 11 | gradeatn == 12 ~ \"Associate degree-all\",\n                          gradeatn %in% c(13,14,15,16) ~ \"Bachelor's degree or more\")) |> \n  summarise(\n      wage_median = averaged_median(\n        x = realwage, \n        w = orgwgt/12,  \n        quantiles_n = 9L, \n        quantiles_w = c(1:4, 5, 4:1)),\n        n=n(),\n        .by=c(educat, year))\n\n#Two category Associate degree\nwages_two_assoc <- new_cps_org |> \n  mutate(educat = case_when(gradeatn %in% c(1,2,3,4,5,6,7,8) ~ \"No HS diploma\",\n                          gradeatn == 9 ~ \"HS graduate\",\n                          gradeatn == 10 ~ \"Some college but no degree\",\n                          gradeatn == 11 ~ \"Associate degree-occupational/vocational\",\n                          gradeatn == 12 ~ \"Associate degree-academic program\",\n                          gradeatn %in% c(13,14,15,16) ~ \"Bachelor's degree or more\")) |> \n  summarise(\n      wage_median = averaged_median(\n        x = realwage, \n        w = orgwgt/12,  \n        quantiles_n = 9L, \n        quantiles_w = c(1:4, 5, 4:1)),\n        n=n(),\n        .by=c(educat, year))\n```\n:::\n\n\n\n\n### Format and save output\n\nHere we'll save our two dataframes to a new Excel sheet, formatting the output so both dataframes fit on a single sheet. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwb$add_worksheet(sheet = \"Education median wages\") $\n  add_data(x = wages_sing_assoc, start_col = 1) $\n  add_data(x = wages_two_assoc, start_col = 8)\n```\n:::\n\n\n\n\n## Save your workbook\n\n**Note:** Don't forget to **file names** and **file paths** to match your setup before running this code chunk.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwb_save(wb, \"output/wisconsin_wages_2025.xlsx\")\n```\n:::\n\n\n\n\nAll done! Happy coding!",
    "supporting": [
      "wisconsin_suppressed_wages_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}