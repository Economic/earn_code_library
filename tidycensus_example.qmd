---
title: "Load Census tables via Tidycensus"
author: "Zane Mokhiber"
---

This script provides a few examples of how to load ACS tables from <https://data.census.gov> using the [Tidycensus](https://walker-data.com/tidycensus/index.html) package.

```{r Load packages, message=FALSE}
library(tidycensus)
library(tidyverse)
```

**Note:** A census API key is required to use `tidycensus`. Register for a Census API key at <https://api.census.gov/data/key_signup.html>. Once you've obtained a key, you can copy it to your .Renviron file by using the `census_api_key()` function.

```{r API key, eval=FALSE}

#sets Census API key (optional but encouraged)
census_api_key("YOUR CENSUS API KEY HERE", install = TRUE)

# When adding a Census API key to your .Renviron file for the time, reload your environment so you can use the key without restarting R.
readRenviron("~/.Renviron")

# You can check it with:
Sys.getenv("CENSUS_API_KEY")
```

## Explore available variables in the ACS 5-year sample

Use the `load_variables()` function to load available tables derived from the 2021 ACS 5-year survey.

-   See a full list of available Census tables at <https://www.census.gov/programs-surveys/acs/technical-documentation/table-shells.html>

```{r Show variables}
# Show all available tables

acs_2021_variables <- load_variables(2021, "acs5", cache = TRUE)

acs_2021_variables
```

## Examples

### Demographic data

This example loads demographic data from the 2017-2021 ACS for counties in Michigan.

```{r Load Michigan data}

# This option will retrieve geographic data from the Census
options(tigris_use_cache = TRUE)

# Table B01001: Sex by Age
MI_demographics <- get_acs(table = "B01001",
                           geography = "county",
                           year = 2021,
                           state = "MI",
                           survey = "acs5")

MI_demographics

```

### Map of median household income in MI, by county

This example creates a map of median household income in Michigan from the 2017-2021 ACS, by county.

```{r Simple MI plot,  message=FALSE}

# Plot household income by county
MI_income <- get_acs(
  geography = "county", 
  state = "MI",
  variables = "B19013_001",
  year = 2021,
  geometry = TRUE,
)

plot(MI_income["estimate"])

```

### Map of median household income for Wayne County, MI, by tract

```{r, message=FALSE}

detroit_income <- get_acs(
  geography = "tract", 
  state = "MI",
  county = "Wayne",
  variables = "B19013_001",
  year = 2021,
  geometry = TRUE,
)

plot(detroit_income["estimate"])

```

### Total income below poverty level in Rhode Island by gender, 2009--2021

This example defines function to load multiple years and multiple demographic groups for table b17001

```{r RI Poverty, message=FALSE}

# Poverty in Rhode Island: https://data.census.gov/table?q=B17001B

#  Function to load multiple years of acs data
load_acs_tables <- function(x){
  get_acs(geography = "state", 
          variables = c(total_count = "B17001_001",  
                        count_income_below_poverty = "B17001_002",  
                        count_income_below_poverty_level_male = "B17001_003",  
                        count_income_below_poverty_level_female = "B17001_017"), 
          state = "RI", 
          year = x, 
          output = "wide") %>% 
    #create year variable
    mutate(year = x)
}

#load 2009:2018 5yr datasets with map_dfr()
RI_Poverty_B <- map_dfr(2009:2021, load_acs_tables)

RI_Poverty_B

```

A more complex function to load multiple demographic groups

```{r Function, message=FALSE}

load_acs_tables2 <- function(x,y){
  get_acs(geography = "state", 
          variables = c(total_count = paste0("B17001",y,"_001"),  
                        count_income_below_poverty = paste0("B17001",y,"_002"),  
                        count_income_below_poverty_level_male = paste0("B17001",y,"_003"),  
                        count_income_below_poverty_level_female = paste0("B17001",y,"_017")), 
          state = "RI", 
          year = x, 
          output = "wide") %>% 
    #create variables to identify years and demographic groups
    mutate(year = x,
           group = y)
}

#create list of arguments to pass to function
crossargs <- expand.grid(x=2009:2021, y=LETTERS[1:9])

#load all data 2009 to 2021
RI_Poverty <- map2_dfr(crossargs$x, crossargs$y, load_acs_tables2)

RI_Poverty

```

See more examples from Tidycensus at <https://walker-data.com/tidycensus/articles/basic-usage.html>
