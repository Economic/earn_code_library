---
title: "Load Census tables via Tidycensus"
author: "Zane Mokhiber"
---

# Load Census tables via Tidycensus

This script provides a few examples of how to load ACS tables from <https://data.census.gov> using the [Tidycensus](https://walker-data.com/tidycensus/index.html) package.

See more examples from Tidycensus at <https://walker-data.com/tidycensus/articles/basic-usage.html>

```{r Load packages, message=FALSE}
library(tidycensus)
library(tidyverse)
```

**Note:** A census API key is required to use `tidycensus`. Register for an API key at <https://api.census.gov/data/key_signup.html>

Once you've obtained a key, set it to your .Renviron file

```{r API key, eval=FALSE}

#sets bls API key (optional but encouraged)
bls_set_key("YOUR BLS API KEY HERE")
```

Use the `load_variables()` function to load available variables from the 2021 ACS 5-year table

```{r Show variables}
#show all available tables:

acs_2021_variables <- load_variables(2021, "acs5", cache = TRUE)

acs_2021_variables
```

Download 2021 5-year ACS tables using `get_acs()` function. Filter to Michigan, include county-level data.

```{r Load Michigan data}

options(tigris_use_cache = TRUE)

# Table B01001: Sex by Age
MI_demographics <- get_acs(table = "B01001",
                           geography = "county",
                           year = 2021,
                           state = "MI",
                           survey = "acs5")

MI_demographics

```

Data from census tables have geographies associated with them, which can be plotted using base R functions

```{r Simple MI plot,  message=FALSE}

# Plot household income by county
MI_income <- get_acs(
  geography = "county", 
  state = "MI",
  variables = "B19013_001",
  year = 2021,
  geometry = TRUE,
)

plot(MI_income["estimate"])

```

Plot household income for Wayne County, MI at the tract level

```{r, message=FALSE}

detroit_income <- get_acs(
  geography = "tract", 
  state = "MI",
  county = "Wayne",
  variables = "B19013_001",
  year = 2021,
  geometry = TRUE,
)

plot(detroit_income["estimate"])

```

More complex data requests using tidycensus

```{r RI Poverty, message=FALSE}

# poverty in Rhode Island: https://data.census.gov/table?q=B17001B

# define function to load multiple years of acs data
load_acs_tables <- function(x){
  get_acs(geography = "state", 
          variables = c(total_count = "B17001_001",  
                        count_income_below_poverty = "B17001_002",  
                        count_income_below_poverty_level_male = "B17001_003",  
                        count_income_below_poverty_level_female = "B17001_017"), 
          state = "RI", 
          year = x, 
          output = "wide") %>% 
    #create year variable
    mutate(year = x)
}

#load 2009:2018 5yr datasets with map_dfr()
RI_Poverty_B <- map_dfr(2009:2021, load_acs_tables)

RI_Poverty_B

```

Define function to load multiple years and multiple demographic groups for table b17001

```{r Function, message=FALSE}

load_acs_tables2 <- function(x,y){
  get_acs(geography = "state", 
          variables = c(total_count = paste0("B17001",y,"_001"),  
                        count_income_below_poverty = paste0("B17001",y,"_002"),  
                        count_income_below_poverty_level_male = paste0("B17001",y,"_003"),  
                        count_income_below_poverty_level_female = paste0("B17001",y,"_017")), 
          state = "RI", 
          year = x, 
          output = "wide") %>% 
    #create variables to identify years and demographic groups
    mutate(year = x,
           group = y)
}

#create list of arguments to pass to function
crossargs <- expand.grid(x=2009:2021, y=LETTERS[1:9])

#load all data 2009 to 2021
RI_Poverty <- map2_dfr(crossargs$x, crossargs$y, load_acs_tables2)

RI_Poverty

```
